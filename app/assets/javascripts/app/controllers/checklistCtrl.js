// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  app.controller('checklistListCtrl', [
    '$scope', '$stateParams', '$filter', 'ChecklistService', 'ItemService', 'checklists', 'templates', function($scope, $stateParams, $filter, ChecklistService, ItemService, checklists, templates) {
      var checklist, key, ref;
      $scope.checklists = checklists.data;
      $scope.templates = templates.data;
      ref = $scope.checklists;
      for (key in ref) {
        checklist = ref[key];
        if (parseInt(checklist.id) === parseInt($stateParams.checklist_id)) {
          $scope.checklists[key]['active'] = true;
        } else {
          $scope.checklists[key]['active'] = false;
        }
      }
      $scope.formChecklistName = '';
      return $scope.formChecklistSubmit = function() {
        var $promise, formParams;
        formParams = {
          name: $scope.formChecklistName.trim()
        };
        if ($scope.formChecklistTemplate) {
          formParams['from_template'] = $scope.formChecklistTemplate.id;
        }
        if (!$scope.formChecklistName) {
          return;
        }
        $promise = ChecklistService.create(formParams);
        return $promise.success(function(data, status) {
          $scope.checklists.unshift(data);
          $scope.formChecklistName = null;
          return console.log('Checklist created');
        });
      };
    }
  ]);

  app.controller('checklistDetailCtrl', [
    '$scope', '$stateParams', '$location', '$state', 'ChecklistService', 'ItemService', 'checklist', 'checklist_items', function($scope, $stateParams, $location, $state, ChecklistService, ItemService, checklist, checklist_items) {
      $scope.checklist = checklist.data;
      $scope.checklist_items = checklist_items.data;
      $scope.checklistUpdate = function(checklist_id, name) {
        var $promise;
        $promise = ChecklistService.update(checklist_id, name);
        return $promise.success(function(data, status) {
          $state.transitionTo($state.current, $stateParams, {
            reload: true
          });
          return console.log('Checklist successfully updated');
        });
      };
      $scope.checklistDelete = function(checklist_id) {
        var $promise;
        $promise = ChecklistService["delete"](checklist_id);
        return $promise.success(function(data, status) {
          console.log('Checklist successfully removed');
          console.log($state.current);
          return $state.transitionTo("checklists", $stateParams, {
            reload: true
          });
        });
      };
      $scope.formItemDescription = '';
      $scope.formItemSubmit = function() {
        var $promise, formParams;
        formParams = {
          description: $scope.formItemDescription.trim(),
          checklist_id: $scope.checklist.id
        };
        if (!$scope.formItemDescription) {
          return;
        }
        $promise = ItemService.save($stateParams.checklist_id, formParams);
        return $promise.success(function(data, status) {
          return $state.transitionTo($state.current, $stateParams, {
            reload: true
          });
        });
      };
      $scope.itemUpdate = function(item_id, description) {
        var $promise;
        $promise = ItemService.update(item_id, description);
        return $promise.success(function(data, status) {
          return console.log('Item successfully updated');
        });
      };
      $scope.itemDelete = function(item_id, index) {
        var $promise;
        $promise = ItemService["delete"](item_id);
        return $promise.success(function(data, status) {
          $state.transitionTo($state.current, $stateParams, {
            reload: true
          });
          return console.log('Item successfully removed');
        });
      };
      return $scope.itemComplete = function(e, item_id) {
        var $promise;
        if (e.target.checked) {
          $promise = ItemService.complete(item_id);
          $promise.success(function(data, status) {
            return console.log('Item successfully completed');
          });
        } else {
          $promise = ItemService.uncomplete(item_id);
          $promise.success(function(data, status) {
            return console.log('Successfully uncompleted item');
          });
        }
        return $state.transitionTo($state.current, $stateParams, {
          reload: true
        });
      };
    }
  ]);

}).call(this);
